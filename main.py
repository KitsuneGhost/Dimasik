def create_dict(file_name):

    """
    Создаем функцию, которая принимает в качестве аргумента имя файла или (путь до него) в формате
    строки (str), читает данные из файла и создает на их основе словарь, где статья - ключ, а список
    со всеми остальными данными такими как год, название статьи, общее количество осужденных,
    количество осужденных, получивших лишение свободы, количество оштрафованных осужденных,
    количество осужденных, получивших ограничения свободы, количество осужденных на принудительных
    работах - значение. Функция возвращает этот словарь.
    """

    with open(str(file_name), 'r', encoding='utf-16') as file:
        # открываем первый файл (тот, что за 2019 год) и сохраняем его в переменную file
        # Далее, начинаем чтение файла
        file.readline()  # пропускаем первую строку файла, т.к это просто заголовки
        keys = []  # создаем список с ключами для словаря
        values = []  # создаем список значений для словаря
        for line in file.readlines():  # перебираем строки файла (начиная со второй!)
            line_lst = line.split("\t")
            # здесь мы берем строку, разбиваем ее на список подстрок с разделителем \t (табуляция)
            line_lst[-1] = line_lst[-1].rstrip()
            # обрезаем последний элемент из line_lst, т.к они сохранены с \n на конце
            keys.append(line_lst[1])
            # берем второй элемент из line_lst (статья) и сохраяем его в список ключей
            line_lst.remove(line_lst[1])
            # удаляем статью из line_lst т.к она теперь ключ
            values.append(line_lst)
            # добавляем в список значений список с данными из строки (НО без названия статьи т.к это ключ)
    # теперь у нас есть список ключей и значений с соответствующими индексами
    # можно создавать словарь
    file_dict = {}  # для начала создадим пустой словарь
    for index in range(len(keys)):
        # перебираем индексы из списка ключей
        file_dict[keys[index]] = values[index]
        # берем ключ и значение с нужным индексом и добавляем их в словарь
    return file_dict  # возвращаем словарь


def compare(dictionary_1, dictionary_2):

    """
    Создаем функцию для сравнения данных двух словарей, полученных после с помощью функции
    create_dict(file_name). Эта функция ничего не возвращает. Различия будут выведены в консоль.
    В качестве аргументов принимает два словаря для сравнения.
    """

    statutes = dictionary_1.keys() # получаем список статей (они же ключи в словарях)
    for statute in statutes:  # перебираем статьи
        data_1 = dictionary_1[statute]  # значения из первого словаря
        data_2 = dictionary_2[statute]  # значения из второго словаря

        # Значения списка имеют следующий вид (разбираем по индексам):
        # 0 - год
        # 1 - название статьи
        # 2 - общее количество осужденных
        # 3 - количество осужденных, получивших лишение свободы
        # 4 - количество оштрафованных осужденных
        # 5 - количество осужденных, получивших ограничения свободы
        # 6 - количество осужденных на принудительных работах

        index_dictionary = {"0": "году",
                            "1": "Название статьи",
                            "2": "Общее количество осужденных",
                            "3": "Количество осужденных, получивших лишение свободы",
                            "4": "Количество оштрафованных осужденных",
                            "5": "Количество осужденных, получивших ограничения свободы",
                            "6": "Количество осужденных на принудительных работах"}
        # словарь выражений по индексам

        for index in range(2, 7):  # перебираем индексы
            ind = str(index)  # переводим индекс в строку для словаря выражений по индексам
            # сравниваем значения и выводим их
            if int(data_1[index]) > int(data_2[index]):
                print(f"{index_dictionary[ind]} по статье '{statute}: {data_1[1]}' в {data_1[0]} году было "
                      f"больше чем в {data_2[0]} году. {data_1[index]} человек и {data_2[index]} человек "
                      f"соответственно.")
            elif int(data_1[index]) < int(data_2[index]):
                print(f"{index_dictionary[ind]} по статье '{statute}: {data_1[1]}' в {data_2[0]} году было "
                      f"больше чем в {data_1[0]} году. {data_2[index]} человек и {data_1[index]} человек "
                      f"соответственно.")
            else:
                print(f"{index_dictionary[ind]} по статье '{statute}: {data_1[1]}' в {data_2[0]} и в "
                      f"{data_1[0]} годах было одинаковым. {data_2[index]} человек.")


def create_rating(dictionary_1, dictionary_2):
    """
    Функция для создания рейтинга статей. Ничего не возвращает. В качестве аргумента принимает 2 словаря.
    """

    keys = dictionary_1.keys()  # список ключей словаря
    statutes = [i for i in keys]  # список статей
    condemned_1 = []  # список количества осужденных за 19 год
    condemned_2 = []  # список количества осужденных за 20 год

    for statute in statutes:  # перебираем статьи
        condemned_1.append(dictionary_1[statute][2])  # заполняем списки
        condemned_2.append(dictionary_2[statute][2])

    with open("rating.txt", "w", encoding='utf-16') as file:  # открываем файл для записи рейтинга
        file.write("Рейтинг статей по общему количеству осужденных\n")  # пишем первые строки
        file.write("\n")
        file.write("2019й год:\n")

        max_el = max(condemned_1)  # максимальное кол-во осужденных
        position = 1  # позиция в рейтинге
        while len(condemned_1) > 0:  # начинаем писать сам рейтинг
            file.write(f"{position} место - статья {statutes[condemned_1.index(max_el)]} - "
                       f"количество осужденных: {max_el}.\n")
            statutes.remove(statutes[condemned_1.index(max_el)])
            # удаляем из списка статей статью которую только что записали
            condemned_1.remove(max_el)
            # удаляем из списка осужденных записанное значение
            max_el = max(condemned_1, default=0)  # новое максимальное значение
            position += 1  # новая позиция
        file.write("\n")  # делаем отступ

        # для 20 года все аналогично
        file.write("2020й год:\n")
        max_el = max(condemned_2)
        position = 1
        statutes = [i for i in keys]  # обновляем список статей
        while len(condemned_2) > 0:
            file.write(f"{position} место - статья {statutes[condemned_2.index(max_el)]} - "
                       f"количество осужденных: {max_el}.\n")
            statutes.remove(statutes[condemned_2.index(max_el)])
            condemned_2.remove(max_el)
            max_el = max(condemned_2, default=0)
            position += 1
        file.write("\n")


data2019 = create_dict("dataset2019.txt")  # создаем словарь с данными за 2019 год (первый файл)
data2020 = create_dict("dataset2020.txt")  # создаем словарь с данными за 2020 год (второй файл)

compare(data2019, data2020)  # вызываем функцию для сравнения

create_rating(data2019, data2020)  # вызываем функцию для создания рейтинга
